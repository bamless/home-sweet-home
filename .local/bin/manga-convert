#!/usr/bin/env jstar

// Convert and rename comics provided as cbz using kcc-c2e (pip install KindleComicConverter).
// The program accepts a pattern of the form 'new_name %n' and a list of .cbz comics.
// During conversion, the comics will be renamed using the provided pattern by substituting the `%n`
// with a chapter number extracted from the cbz file name. If no number can be found in the cbz
// filename, it will be skipped. The output is going be a new file in mobi format, ready to be
// imported by a kindle.

import io
import re
import sys

// Constants
var MOBI_EXT, NUM_REGEX = "mobi", "%d+"
var KCC_COMMAND = 'kcc-c2e -m -q -2 -p K578 -g 0.75 -r 1 -t "{0}" "{1}" 2>/dev/null 1>&2'

class ConvertException is Exception 
    construct(chapter, error)
        super("Error converting chapter {0}: {1}" % (chapter, error))
    end
end

fun kccC2E(file, title)
    return sys.system(KCC_COMMAND % (title, file)) == 0
end

fun convertAndRename(chapter, name)
    if !kccC2E(chapter, name)
        raise ConvertException(chapter, "kcc-c2e failed")
    end

    // delete KCC cache, as it may fill up the /tmp fylesystem
    sys.system("rm -rf /tmp/KCC* 2>/dev/null 1>&2")

    var extension = re.match(chapter, "%.([^%.]+)$")
    var kccOutput = re.substituteAll(chapter, extension, MOBI_EXT) if extension else chapter + "." + MOBI_EXT
    var outName = name + "." + MOBI_EXT

    try
        io.rename(kccOutput, outName)
    except io.IOException e
        raise ConvertException(chapter, "cannot rename chapter: " + e.err())
    end
end

if __name__ == "__main__"
    fun printProgress(n, total, chapterName, newName)
        var perc = std.int((n + 1) / total * 100)
        print("[{0}%] converting {1} to {2}" % (perc, chapterName, newName))
    end

    if #argv == 0
        io.stderr.writeln("Usage: manga-convert pattern [chapters...]")
        sys.exit(-1)
    end

    var namePattern = argv.removeAt(0)
    if !re.match(namePattern, '%%n')
        io.stderr.writeln("Name pattern `{0}` doesn't contain `%n`" % namePattern)
        sys.exit(-1)
    end

    for var n, chapterName in argv.enumerate()
        var chapterNum = re.match(chapterName, NUM_REGEX)
        if !chapterNum
            io.stderr.writeln("`{0}` doesn't contain a chapter number, skipping" % chapterName)
            continue
        end

        var newName = re.substituteAll(namePattern, "%%n", chapterNum)

        try 
            printProgress(n, #argv, chapterName, newName)
            convertAndRename(chapterName, newName)
        except ConvertException e
            io.stderr.writeln(e.err())
        end
    end

    print("Done")
end
